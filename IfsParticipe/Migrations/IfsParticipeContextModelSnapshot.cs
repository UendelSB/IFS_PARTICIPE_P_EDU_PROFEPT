// <auto-generated />
using System;
using IfsParticipe.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfsParticipe.Migrations
{
    [DbContext(typeof(IfsParticipeContext))]
    partial class IfsParticipeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IfsParticipe.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<int?>("IdComentario");

                    b.Property<int?>("IdDemanda");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("Nota");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.HasKey("Id");

                    b.HasIndex("IdComentario");

                    b.HasIndex("IdDemanda");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("IfsParticipe.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int>("IdDemanda");

                    b.Property<int>("IdUsuario");

                    b.HasKey("Id");

                    b.HasIndex("IdDemanda");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("IfsParticipe.Models.Demanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Categoria")
                        .IsRequired();

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("IdPDI");

                    b.Property<int>("IdUsuario");

                    b.Property<int?>("Situacao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("IdPDI");

                    b.ToTable("Demanda");
                });

            modelBuilder.Entity("IfsParticipe.Models.PDI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<DateTime?>("DataFimRecDem");

                    b.Property<DateTime?>("DataFimVig")
                        .IsRequired();

                    b.Property<DateTime?>("DataIniRecDem");

                    b.Property<DateTime?>("DataIniVig")
                        .IsRequired();

                    b.Property<int>("IdUsuario");

                    b.Property<int?>("Situacao")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PDI");
                });

            modelBuilder.Entity("IfsParticipe.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataCadastro");

                    b.Property<string>("Email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Telefone");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("IfsParticipe.Models.Avaliacao", b =>
                {
                    b.HasOne("IfsParticipe.Models.Comentario", "ComentarioPDI")
                        .WithMany()
                        .HasForeignKey("IdComentario");

                    b.HasOne("IfsParticipe.Models.Demanda", "DemandaPDI")
                        .WithMany()
                        .HasForeignKey("IdDemanda");
                });

            modelBuilder.Entity("IfsParticipe.Models.Comentario", b =>
                {
                    b.HasOne("IfsParticipe.Models.Demanda", "DemandaPDI")
                        .WithMany()
                        .HasForeignKey("IdDemanda")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IfsParticipe.Models.Demanda", b =>
                {
                    b.HasOne("IfsParticipe.Models.PDI", "Pdi")
                        .WithMany()
                        .HasForeignKey("IdPDI")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
